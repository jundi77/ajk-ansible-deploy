##################################################
# DO Community Playbooks: LEMP on Ubuntu 18.04
##################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude', 'software-properties-common' ]

    - name: Add php repository
      apt_repository:
        repo: ppa:ondrej/php
      when: ansible_distribution == "Ubuntu"

    - name: Install LEMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'zip', 'unzip', 'nginx', 'mysql-server', 'python3-pymysql', 'php8.0', 'php8.0-fpm', 'php8.0-mbstring', 'php8.0-mysql', 'php8.0-xml', 'php8.0-zip', 'php-fpm', 'php-mysql']

    - name: Download dan install Composer
      shell: curl -sS https://getcomposer.org/installer | php
      args:
        chdir: /usr/src
        creates: /usr/local/bin/composer
        warn: false
      become: yes

    - name: Add composer to global path
      copy:
        dest: /usr/local/bin/composer
        group: root
        mode: '0755'
        owner: root
        src: /usr/src/composer.phar
        remote_src: yes
      become: yes

# MySQL Configuration
    - name: Sets the root password 
      mysql_user: 
        name: root 
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Removes the MySQL test database
      mysql_db: 
        name: test 
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Buat db "laravel" sesuai .env
      mysql_db: 
        name: laravel
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

# laravel
    - name: "Pull dari gitlab"
      git:
        repo: "{{github_repo_url}}"
        dest: "{{working_directory}}"
        version: master
        accept_hostkey: yes
      register: repo
      become: no

    - name: Sets Up .env untuk laravel
      template:
        src: "files/.env.j2"
        dest: "{{working_directory}}/.env"
      become: no

    - name: "Install dependency composer"
      shell: "composer install --no-dev --optimize-autoloader --prefer-dist --no-interaction"
      args:
        chdir: "{{ working_directory }}"
      become: no

    - name: "Jalankan migration"
      shell: "php artisan migrate --force"
      args:
        chdir: "{{ working_directory }}"
      become: no

    - name: "Install dependency composer"
      shell: "composer install --no-dev --optimize-autoloader --prefer-dist --no-interaction"
      args:
        chdir: "{{ working_directory }}"
      become: no

    - name: "Copy laravel ke /var/www/html"
      shell: "cp -r {{working_directory}} /var/www/html"
      become: yes

# Nginx Configuration
    - name: Sets Nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enables new site
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
      notify: Reload Nginx
    
    - name: Removes "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx

# UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp


  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
